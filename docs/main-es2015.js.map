{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/add-players/add-players.component.ts","./src/app/add-players/add-players.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/game-time/game-time.component.ts","./src/app/game-time/game-time.component.html","./src/app/model.ts","./src/app/settings/settings.component.ts","./src/app/settings/settings.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Player } from '../model';\n\n@Component({\n  selector: 'app-add-players',\n  templateUrl: './add-players.component.html',\n  styleUrls: ['./add-players.component.css']\n})\nexport class AddPlayersComponent implements OnInit {\n\n  players: Array<Player> = [];\n  ponyName: string;\n  color: string = this.getRandomColor();\n\n  @Output() startGame = new EventEmitter<Array<Player>>();\n\n  constructor() { \n  }\n\n  ngOnInit() {\n  }\n\n  getRandomColor(): string {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n\n  addPony() {\n    var newPony = new Player(this.ponyName, this.color);\n    this.players.push(newPony);\n    this.color = this.getRandomColor();\n    this.ponyName = \"\";\n  }\n\n  gallop() {\n    this.startGame.emit(this.players);\n  }\n}\n","<div style=\"display: flex; flex-direction: column;\">\nAdd ponies:\n<div style=\"display: flex; flex-direction: row;\">\n<input type=\"text\" [(ngModel)]=\"ponyName\" />\n<input [(colorPicker)]=\"color\" [style.background]=\"color\" [value]=\"color\"/>\n<button (click)=\"addPony()\">Add pony!</button>\n</div>\n<p *ngIf=\"players.length > 0\">Ponies added:</p>\n<div *ngFor=\"let player of players\" style=\"display: flex; flex-direction: row;\" [ngStyle]=\"{'color': player.color}\">\n    {{ player.name }}\n</div>\n<button *ngIf=\"players.length > 0\" (click)=\"gallop()\">LET'S GALLOP!</button>\n</div>","import { Component } from '@angular/core';\nimport {Player, Settings} from './model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  state = 'addplayers';\n  players: Array<Player> = []; // [new Player(\"Twilight Sparkle\", \"#BD9E2D\"), new Player(\"Applejack\", \"#9C5CA8\")];\n  settings: Settings = new Settings(\n    false,\n    45\n  );\n  showSettings = false;\n\n  ngOnInit() {\n    let players = localStorage.getItem(\"players\");\n    if (players !== null) {\n      this.startGame(JSON.parse(players) as Array<Player>);\n    }\n  }\n\n  startGame(event) {\n    this.players = event;\n    this.state = 'gametimestarted';\n    let players = JSON.stringify(this.players);\n    console.log(players);\n    localStorage.setItem(\"players\", players);\n  }\n\n  refreshSettings(event) {\n    this.settings = event;\n  }\n\n  settingsClick() {\n    this.showSettings = !this.showSettings;\n  }\n}\n","<div class=\"container\">\n<div class=\"header\"><h1>Twilight's Notebook</h1><i class=\"settings\" (click)=\"settingsClick()\"></i></div>\n<app-settings *ngIf=\"showSettings\" (refreshSettings)=\"refreshSettings($event)\"> </app-settings>\n<app-add-players *ngIf=\"state==='addplayers'\" (startGame)=\"startGame($event)\"></app-add-players>\n<app-game-time *ngIf=\"state==='gametimestarted'\" [players]=\"players\" [settings]=\"settings\"></app-game-time>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ColorPickerModule } from 'ngx-color-picker';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\n\nimport { AppComponent } from './app.component';\nimport { AddPlayersComponent } from './add-players/add-players.component';\nimport { GameTimeComponent } from './game-time/game-time.component';\nimport { SettingsComponent } from './settings/settings.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddPlayersComponent,\n    GameTimeComponent,\n    SettingsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ColorPickerModule,\n    NgbModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {\n  Component,\n  OnInit,\n  Input,\n  ViewChild\n} from '@angular/core';\nimport {\n  Player,\n  GameEntry, Settings\n} from '../model';\n\nimport {Observable} from 'rxjs/Rx';\n\nfunction download(data: string, filename: string): void {\n  const blob = new Blob([data], { type: 'text/plain' });\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.setAttribute('download', filename);\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n\n@Component({\n  selector: 'app-game-time',\n  templateUrl: './game-time.component.html',\n  styleUrls: ['./game-time.component.css'],\n  host: { '(window:keydown)': 'keyDown($event)' },\n})\nexport class GameTimeComponent implements OnInit {\n\n  @Input() settings: Settings;\n  @Input() players: Array < Player > = [];\n  entries: Array < GameEntry > = [];\n  currentPlayer = 0;\n  textarea: string;\n  state: string = \"waiting\";\n  @ViewChild('textArea', {static: true}) textAreaElement;\n  @ViewChild('entryTable', {static: true}) entryTableElement;\n  timer;\n  subscription;\n  progressBarValue: number = 100;\n\n  controlDown: boolean = false;\n\n  exportWithNames = true;\n\n  constructor() {}\n\n  ngOnInit() {\n    let elem = this.entryTableElement.nativeElement;\n    window.setInterval(function() {\n      elem.scrollTop = elem.scrollHeight;\n    }, 100);\n    let story = localStorage.getItem(\"story\");\n    if (story !== null) {\n      this.entries = JSON.parse(story) as Array<GameEntry>;\n      this.currentPlayer = Number(localStorage.getItem(\"currentPlayer\"));\n    }\n  }\n\n  tick(a) {\n    this.progressBarValue -= (100 / this.settings.turnTime);\n    if (this.progressBarValue < 0) {\n      alert(\"time's up!\");\n      this.state = \"waiting\";\n      this.nextPlayer();\n    }\n  }\n\n  nextPlayer() {\n    this.subscription.unsubscribe();\n    this.textarea = \"\";\n    this.currentPlayer++;\n    this.progressBarValue = 100;\n    if (this.currentPlayer === this.players.length) {\n      this.currentPlayer = 0;\n    }\n    localStorage.setItem(\"currentPlayer\", this.currentPlayer.toString());\n  }\n\n  submitEntry(player: Player, text: string) {\n    this.entries.push(new GameEntry(player, text));\n    let story = JSON.stringify(this.entries);\n    console.log(story);\n    localStorage.setItem(\"story\", story);\n  }\n\n  keyFunction(e) {\n    if (e.key === \"Control\") {\n      this.controlDown = false;\n      return;\n    }\n    if (e.key === \"Enter\") {\n      if (this.state === \"typing\" && this.controlDown) {\n        this.state = \"waiting\";\n        this.submitEntry(this.players[this.currentPlayer], this.textarea.replace(\"\\n\", \" \"));\n        this.nextPlayer();\n        return;\n      }\n      if (this.state === \"waiting\") {\n        this.state = \"typing\";\n        this.timer = Observable.timer(0,1000);\n        this.subscription = this.timer.subscribe(t=> {\n          this.tick(t);\n        });\n        return;\n      }\n    }\n  }\n\n  keyDown(e) {\n    if (e.key === \"Control\") {\n      this.controlDown = true;\n    }\n  }\n\n  export() {\n    const entries = this.exportWithNames\n        ? this.entries.map(e => e.player.name + ': ' + e.text)\n        : this.entries.map(e => e.text);\n    const story = entries.join('\\n');\n    download(story, 'story.txt');\n  }\n}\n","<div style=\"display: flex; flex-direction: column\">\n  <table #entryTable class=\"table table-sm\" style=\"display: block; height: 500px; overflow-y: scroll;\">\n    <tbody>\n      <tr *ngFor=\"let entry of entries\" [ngStyle]=\"{'color': entry.player.color, 'width': '100%'}\">\n        <td><b>{{entry.player.name}}</b></td>\n        <td style=\"display:inline-block; position:relative; width: 100%\">\n          <span>{{entry.text}}</span>\n          <div *ngIf=\"!this.settings.showText && state==='waiting'\" style=\"position:absolute; left:0; right:0; top:0; bottom:0; background: black;\"></div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <hr />\n  <span [ngStyle]=\"{'color': players[currentPlayer].color}\">It's <b>{{players[currentPlayer].name}}'s</b> turn!</span>\n  <textarea\n  (keyup)=\"keyFunction($event)\"\n  [(ngModel)]=\"textarea\"\n  [readonly]=\"state==='waiting'\"\n  [ngStyle]=\"{'background': state==='waiting'?'grey':'white'}\"\n  autofocus\n  #textArea\n  ></textarea>\n  <ngb-progressbar *ngIf=\"state==='typing'\" type=\"danger\" [value]=\"progressBarValue\"></ngb-progressbar>\n  <div>\n      <label for=\"exportWithNames\">Export with names</label>\n      <input id=\"exportWithNames\" type=\"checkbox\" [(ngModel)]=\"exportWithNames\" />\n      <button (click)=\"export()\">EXPORT STORY</button>\n  </div>\n</div>\n","export class Player {\n    constructor(\n        public name: string,\n        public color: string\n    ) {}\n}\n\nexport class GameEntry {\n    constructor(\n        public player: Player,\n        public text: string\n    ) {}\n}\n\nexport class Settings {\n    constructor(\n        public showText: boolean,\n        public turnTime: number\n    ) {}\n}\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Settings} from '../model';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n\n  turnTime = 45;\n  showText = false;\n\n\n  @Output() refreshSettings = new EventEmitter<Settings>();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  acceptConfig() {\n    this.refreshSettings.emit(new Settings(\n      this.showText,\n      this.turnTime\n    ));\n  }\n\n  resetGame() {\n    localStorage.clear();\n    location.reload();\n  }\n}\n","<div style=\"display: flex; flex-direction: column;padding: 10px; border: 2px solid black;\">\n  <p>Hello and welcome to the settings tab.</p>\n  <p>If you didn't like the defaults you can change them here you whiny bitch</p>\n  <button (click)=\"resetGame()\">reset game</button>\n  <div style=\"display: flex; flex-direction: column;\">\n    <label for=\"showTextBox\">Show Text</label>\n    <input id=\"showTextBox\" type=\"checkbox\" [(ngModel)]=\"showText\" />\n    <label for=\"turnTimeBox\">Turn Time</label>\n    <input id=\"turnTimeBox\" type=\"number\" [(ngModel)]=\"turnTime\" />\n    <button (click)=\"acceptConfig()\"> Refresh Config !!! </button>\n  </div>\n</div>\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///"}