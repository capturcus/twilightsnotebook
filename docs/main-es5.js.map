{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/add-players/add-players.component.html","webpack:///src/app/add-players/add-players.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/game-time/game-time.component.html","webpack:///src/app/game-time/game-time.component.ts","webpack:///src/app/model.ts","webpack:///src/app/settings/settings.component.ts","webpack:///src/app/settings/settings.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","AddPlayersComponent","players","color","getRandomColor","startGame","EventEmitter","letters","i","Math","floor","random","newPony","Player","ponyName","push","emit","addPony","AppComponent","state","settings","Settings","showSettings","localStorage","getItem","JSON","parse","event","stringify","console","log","setItem","settingsClick","AppModule","BrowserModule","FormsModule","ColorPickerModule","NgbModule","GameTimeComponent","SettingsComponent","download","data","filename","blob","Blob","type","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","entries","currentPlayer","progressBarValue","controlDown","exportWithNames","elem","entryTableElement","nativeElement","setInterval","scrollTop","scrollHeight","story","Number","a","turnTime","alert","nextPlayer","subscription","unsubscribe","textarea","length","toString","player","text","GameEntry","key","submitEntry","replace","timer","Observable","subscribe","t","tick","map","name","join","keyFunction","showText","refreshSettings","clear","location","reload","resetGame","acceptConfig","environment","production","enableProdMode","platformBrowser","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","<div style=\"display: flex; flex-direction: column;\">\nAdd ponies:\n<div style=\"display: flex; flex-direction: row;\">\n<input type=\"text\" [(ngModel)]=\"ponyName\" />\n<input [(colorPicker)]=\"color\" [style.background]=\"color\" [value]=\"color\"/>\n<button (click)=\"addPony()\">Add pony!</button>\n</div>\n<p *ngIf=\"players.length > 0\">Ponies added:</p>\n<div *ngFor=\"let player of players\" style=\"display: flex; flex-direction: row;\" [ngStyle]=\"{'color': player.color}\">\n    {{ player.name }}\n</div>\n<button *ngIf=\"players.length > 0\" (click)=\"gallop()\">LET'S GALLOP!</button>\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Player } from '../model';\n\n@Component({\n  selector: 'app-add-players',\n  templateUrl: './add-players.component.html',\n  styleUrls: ['./add-players.component.css']\n})\nexport class AddPlayersComponent implements OnInit {\n\n  players: Array<Player> = [];\n  ponyName: string;\n  color: string = this.getRandomColor();\n\n  @Output() startGame = new EventEmitter<Array<Player>>();\n\n  constructor() { \n  }\n\n  ngOnInit() {\n  }\n\n  getRandomColor(): string {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n\n  addPony() {\n    var newPony = new Player(this.ponyName, this.color);\n    this.players.push(newPony);\n    this.color = this.getRandomColor();\n    this.ponyName = \"\";\n  }\n\n  gallop() {\n    this.startGame.emit(this.players);\n  }\n}\n","<div class=\"container\">\n<div class=\"header\"><h1>Twilight's Notebook</h1><i class=\"settings\" (click)=\"settingsClick()\"></i></div>\n<app-settings *ngIf=\"showSettings\" (refreshSettings)=\"refreshSettings($event)\"> </app-settings>\n<app-add-players *ngIf=\"state==='addplayers'\" (startGame)=\"startGame($event)\"></app-add-players>\n<app-game-time *ngIf=\"state==='gametimestarted'\" [players]=\"players\" [settings]=\"settings\"></app-game-time>\n</div>\n","import { Component } from '@angular/core';\nimport {Player, Settings} from './model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  state = 'addplayers';\n  players: Array<Player> = []; // [new Player(\"Twilight Sparkle\", \"#BD9E2D\"), new Player(\"Applejack\", \"#9C5CA8\")];\n  settings: Settings = new Settings(\n    false,\n    45\n  );\n  showSettings = false;\n\n  ngOnInit() {\n    let players = localStorage.getItem(\"players\");\n    if (players !== null) {\n      this.startGame(JSON.parse(players) as Array<Player>);\n    }\n  }\n\n  startGame(event) {\n    this.players = event;\n    this.state = 'gametimestarted';\n    let players = JSON.stringify(this.players);\n    console.log(players);\n    localStorage.setItem(\"players\", players);\n  }\n\n  refreshSettings(event) {\n    this.settings = event;\n  }\n\n  settingsClick() {\n    this.showSettings = !this.showSettings;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ColorPickerModule } from 'ngx-color-picker';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\n\nimport { AppComponent } from './app.component';\nimport { AddPlayersComponent } from './add-players/add-players.component';\nimport { GameTimeComponent } from './game-time/game-time.component';\nimport { SettingsComponent } from './settings/settings.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddPlayersComponent,\n    GameTimeComponent,\n    SettingsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ColorPickerModule,\n    NgbModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div style=\"display: flex; flex-direction: column\">\n  <table #entryTable class=\"table table-sm\" style=\"display: block; height: 500px; overflow-y: scroll;\">\n    <tbody>\n      <tr *ngFor=\"let entry of entries\" [ngStyle]=\"{'color': entry.player.color, 'width': '100%'}\">\n        <td><b>{{entry.player.name}}</b></td>\n        <td style=\"display:inline-block; position:relative; width: 100%\">\n          <span>{{entry.text}}</span>\n          <div *ngIf=\"!this.settings.showText && state==='waiting'\" style=\"position:absolute; left:0; right:0; top:0; bottom:0; background: black;\"></div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <hr />\n  <span [ngStyle]=\"{'color': players[currentPlayer].color}\">It's <b>{{players[currentPlayer].name}}'s</b> turn!</span>\n  <textarea\n  (keyup)=\"keyFunction($event)\"\n  [(ngModel)]=\"textarea\"\n  [readonly]=\"state==='waiting'\"\n  [ngStyle]=\"{'background': state==='waiting'?'grey':'white'}\"\n  autofocus\n  #textArea\n  ></textarea>\n  <ngb-progressbar *ngIf=\"state==='typing'\" type=\"danger\" [value]=\"progressBarValue\"></ngb-progressbar>\n  <div>\n      <label for=\"exportWithNames\">Export with names</label>\n      <input id=\"exportWithNames\" type=\"checkbox\" [(ngModel)]=\"exportWithNames\" />\n      <button (click)=\"export()\">EXPORT STORY</button>\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  Input,\n  ViewChild\n} from '@angular/core';\nimport {\n  Player,\n  GameEntry, Settings\n} from '../model';\n\nimport {Observable} from 'rxjs/Rx';\n\nfunction download(data: string, filename: string): void {\n  const blob = new Blob([data], { type: 'text/plain' });\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.setAttribute('download', filename);\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n\n@Component({\n  selector: 'app-game-time',\n  templateUrl: './game-time.component.html',\n  styleUrls: ['./game-time.component.css'],\n  host: { '(window:keydown)': 'keyDown($event)' },\n})\nexport class GameTimeComponent implements OnInit {\n\n  @Input() settings: Settings;\n  @Input() players: Array < Player > = [];\n  entries: Array < GameEntry > = [];\n  currentPlayer = 0;\n  textarea: string;\n  state: string = \"waiting\";\n  @ViewChild('textArea', {static: true}) textAreaElement;\n  @ViewChild('entryTable', {static: true}) entryTableElement;\n  timer;\n  subscription;\n  progressBarValue: number = 100;\n\n  controlDown: boolean = false;\n\n  exportWithNames = true;\n\n  constructor() {}\n\n  ngOnInit() {\n    let elem = this.entryTableElement.nativeElement;\n    window.setInterval(function() {\n      elem.scrollTop = elem.scrollHeight;\n    }, 100);\n    let story = localStorage.getItem(\"story\");\n    if (story !== null) {\n      this.entries = JSON.parse(story) as Array<GameEntry>;\n      this.currentPlayer = Number(localStorage.getItem(\"currentPlayer\"));\n    }\n  }\n\n  tick(a) {\n    this.progressBarValue -= (100 / this.settings.turnTime);\n    if (this.progressBarValue < 0) {\n      alert(\"time's up!\");\n      this.state = \"waiting\";\n      this.nextPlayer();\n    }\n  }\n\n  nextPlayer() {\n    this.subscription.unsubscribe();\n    this.textarea = \"\";\n    this.currentPlayer++;\n    this.progressBarValue = 100;\n    if (this.currentPlayer === this.players.length) {\n      this.currentPlayer = 0;\n    }\n    localStorage.setItem(\"currentPlayer\", this.currentPlayer.toString());\n  }\n\n  submitEntry(player: Player, text: string) {\n    this.entries.push(new GameEntry(player, text));\n    let story = JSON.stringify(this.entries);\n    console.log(story);\n    localStorage.setItem(\"story\", story);\n  }\n\n  keyFunction(e) {\n    if (e.key === \"Control\") {\n      this.controlDown = false;\n      return;\n    }\n    if (e.key === \"Enter\") {\n      if (this.state === \"typing\" && this.controlDown) {\n        this.state = \"waiting\";\n        this.submitEntry(this.players[this.currentPlayer], this.textarea.replace(\"\\n\", \" \"));\n        this.nextPlayer();\n        return;\n      }\n      if (this.state === \"waiting\") {\n        this.state = \"typing\";\n        this.timer = Observable.timer(0,1000);\n        this.subscription = this.timer.subscribe(t=> {\n          this.tick(t);\n        });\n        return;\n      }\n    }\n  }\n\n  keyDown(e) {\n    if (e.key === \"Control\") {\n      this.controlDown = true;\n    }\n  }\n\n  export() {\n    const entries = this.exportWithNames\n        ? this.entries.map(e => e.player.name + ': ' + e.text)\n        : this.entries.map(e => e.text);\n    const story = entries.join('\\n');\n    download(story, 'story.txt');\n  }\n}\n","export class Player {\n    constructor(\n        public name: string,\n        public color: string\n    ) {}\n}\n\nexport class GameEntry {\n    constructor(\n        public player: Player,\n        public text: string\n    ) {}\n}\n\nexport class Settings {\n    constructor(\n        public showText: boolean,\n        public turnTime: number\n    ) {}\n}\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Settings} from '../model';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n\n  turnTime = 45;\n  showText = false;\n\n\n  @Output() refreshSettings = new EventEmitter<Settings>();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  acceptConfig() {\n    this.refreshSettings.emit(new Settings(\n      this.showText,\n      this.turnTime\n    ));\n  }\n\n  resetGame() {\n    localStorage.clear();\n    location.reload();\n  }\n}\n","<div style=\"display: flex; flex-direction: column;padding: 10px; border: 2px solid black;\">\n  <p>Hello and welcome to the settings tab.</p>\n  <p>If you didn't like the defaults you can change them here you whiny bitch</p>\n  <button (click)=\"resetGame()\">reset game</button>\n  <div style=\"display: flex; flex-direction: column;\">\n    <label for=\"showTextBox\">Show Text</label>\n    <input id=\"showTextBox\" type=\"checkbox\" [(ngModel)]=\"showText\" />\n    <label for=\"turnTimeBox\">Turn Time</label>\n    <input id=\"turnTimeBox\" type=\"number\" [(ngModel)]=\"turnTime\" />\n    <button (click)=\"acceptConfig()\"> Refresh Config !!! </button>\n  </div>\n</div>\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"]}